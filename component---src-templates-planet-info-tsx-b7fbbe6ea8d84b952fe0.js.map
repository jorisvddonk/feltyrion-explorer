{"version":3,"sources":["webpack:///./src/templates/PlanetInfo.tsx"],"names":["PlanetInfo","planet","data","name","index","x","y","z","childrenGuideEntry","map","entry","text","join","query"],"mappings":"sNAIe,SAASA,EAAT,GAA8B,IACnCC,EADmC,EAARC,KAC3BD,OACR,OACE,gBAAC,IAAD,KACE,0BAAKA,EAAOC,KAAKC,MACjB,8CACoB,0BAAKF,EAAOC,KAAKE,OADrC,OACqDH,EAAOC,KAAKG,EADjE,MACuEJ,EAAOC,KAAKI,EADnF,IACuF,IACpFL,EAAOC,KAAKK,GAGf,2CACA,2BACGN,EAAOO,mBAAmBC,KAAI,SAAAC,GAAK,OAAIA,EAAMR,KAAKS,QAAMC,KAAK,QAK/D,IAAMC,EAAQ","file":"component---src-templates-planet-info-tsx-b7fbbe6ea8d84b952fe0.js","sourcesContent":["import * as React from \"react\";\nimport { DefaultLayout as Layout } from \"../layouts/index\";\nimport { graphql } from \"gatsby\";\n\nexport default function PlanetInfo({ data }) {\n  const { planet } = data;\n  return (\n    <Layout>\n      <h1>{planet.data.name}</h1>\n      <p>\n        planet with index <em>{planet.data.index}</em> at {planet.data.x}, {-planet.data.y},{\" \"}\n        {planet.data.z}\n      </p>\n\n      <h2>Guide entries</h2>\n      <pre>\n        {planet.childrenGuideEntry.map(entry => entry.data.text).join(\"\\n\")}\n      </pre>\n    </Layout>\n  );\n}\nexport const query = graphql`\n  query($slug: String!) {\n    planet(fields: { slug: { eq: $slug } }) {\n      id\n      data {\n        name\n        index\n        x\n        y\n        z\n      }\n      childrenGuideEntry {\n        data {\n          text\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}