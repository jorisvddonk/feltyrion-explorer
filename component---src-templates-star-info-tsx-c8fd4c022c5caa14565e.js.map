{"version":3,"sources":["webpack:///./src/templates/StarInfo.tsx"],"names":["StarInfo","star","data","name","type","x","y","z","childrenPlanet","map","planet","key","id","to","fields","slug","index","childrenGuideEntry","entry","text","join","query"],"mappings":"2OAKe,SAASA,EAAT,GAA4B,IACjCC,EADiC,EAARC,KACzBD,KACR,OACE,gBAAC,IAAD,KACE,0BAAKA,EAAKC,KAAKC,MACf,yCACe,8BAAMF,EAAKC,KAAKE,MAD/B,OAC8CH,EAAKC,KAAKG,EADxD,MAC8DJ,EAAKC,KAAKI,EADxE,IAC4E,IACzEL,EAAKC,KAAKK,GAEb,qCACA,2BACGN,EAAKO,eAAeC,KAAI,SAAAC,GACvB,OACE,uBAAKC,IAAKD,EAAOE,IACf,4BACE,0BAAI,gBAAC,IAAD,CAAMC,GAAIH,EAAOI,OAAOC,MAAOL,EAAOR,KAAKC,MAA/C,WAAoEO,EAAOR,KAAKc,MAAhF,WAOV,2CACA,2BACGf,EAAKgB,mBAAmBR,KAAI,SAAAS,GAAK,OAAIA,EAAMhB,KAAKiB,QAAMC,KAAK,QAK7D,IAAMC,EAAQ","file":"component---src-templates-star-info-tsx-c8fd4c022c5caa14565e.js","sourcesContent":["import * as React from \"react\";\nimport { DefaultLayout as Layout } from \"../layouts/index\";\nimport Link from \"gatsby-link\";\nimport { graphql } from \"gatsby\";\n\nexport default function StarInfo({ data }) {\n  const { star } = data;\n  return (\n    <Layout>\n      <h1>{star.data.name}</h1>\n      <p>\n        Star of type <em>S{star.data.type}</em> at {star.data.x}, {-star.data.y},{\" \"}\n        {star.data.z}\n      </p>\n      <h2>Planets</h2>\n      <div>\n        {star.childrenPlanet.map(planet => {\n          return (\n            <div key={planet.id}>\n              <span>\n                <em><Link to={planet.fields.slug}>{planet.data.name}</Link> (index {planet.data.index})</em>\n              </span>\n            </div>\n          );\n        })}\n      </div>\n\n      <h2>Guide entries</h2>\n      <pre>\n        {star.childrenGuideEntry.map(entry => entry.data.text).join(\"\\n\")}\n      </pre>\n    </Layout>\n  );\n}\nexport const query = graphql`\n  query($slug: String!) {\n    star(fields: { slug: { eq: $slug } }) {\n      id\n      data {\n        name\n        type\n        x\n        y\n        z\n      }\n      childrenGuideEntry {\n        data {\n          text\n        }\n      }\n      childrenPlanet {\n        id\n        data {\n          name\n          index\n          x\n          y\n          z\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}